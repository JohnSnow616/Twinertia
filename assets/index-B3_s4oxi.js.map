{"version":3,"file":"index-B3_s4oxi.js","sources":["../../../src/client/game/scenes/Boot.ts","../../../src/client/game/scenes/Preloader.ts","../../../src/client/game/scenes/MainMenu.ts","../../../src/client/game/scenes/Instructions.ts","../../../src/client/game/logic/Kiro.ts","../../../src/client/game/scenes/Game.ts","../../../src/client/game/scenes/GameOver.ts","../../../src/client/game/main.ts","../../../src/client/main.ts"],"sourcesContent":["import { Scene } from 'phaser';\n\nexport class Boot extends Scene {\n  constructor() {\n    super('Boot');\n  }\n\n  preload() {\n    //  The Boot Scene is typically used to load in any assets you require for your Preloader, such as a game logo or background.\n    //  The smaller the file size of the assets, the better, as the Boot Scene itself has no preloader.\n\n    this.load.image('background', 'assets/bg.png');\n  }\n\n  create() {\n    this.scene.start('Preloader');\n  }\n}\n","import { Scene } from \"phaser\";\n\nexport class Preloader extends Scene {\n  constructor() {\n    super(\"Preloader\");\n  }\n\n  init() {\n    // Background\n    this.add.image(512, 384, \"background\");\n\n    // Progress bar outline\n    this.add.rectangle(512, 384, 468, 32).setStrokeStyle(1, 0xffffff);\n    const bar = this.add.rectangle(512 - 230, 384, 4, 28, 0xffffff);\n\n    // Update bar width as loading progresses\n    this.load.on(\"progress\", (progress: number) => {\n      bar.width = 4 + 460 * progress;\n    });\n  }\n\n  preload() {\n    this.load.setPath(\"assets\");  \n    this.load.image(\"background\", \"assets/bg.png\");\n\n    // ✅ Correct path and frame sizes\n    this.load.spritesheet(\"boy\", \"boy_character.png\", {\n    frameWidth: 67,\n    frameHeight: 76,\n    margin: 0,\n    spacing: 0,\n    });\n  }\n\n  create() {\n    // Move to the Main Menu after loading is complete\n    this.scene.start(\"MainMenu\");\n  }\n}\n","// twinertia/src/client/game/scenes/MainMenu.ts\nimport { Scene, GameObjects } from \"phaser\";\n\nexport class MainMenu extends Scene {\n  background: GameObjects.Image | null = null;\n  title: GameObjects.Text | null = null;\n  playButton!: GameObjects.Text;\n  settingsButton!: GameObjects.Text;\n  quitButton!: GameObjects.Text;\n\n  constructor() {\n    super(\"MainMenu\");\n  }\n\n  init(): void {\n    this.background = null;\n    this.title = null;\n  }\n\n  create() {\n    this.refreshLayout();\n\n    // --- Fade in on scene start ---\n    this.cameras.main.fadeIn(800, 0, 0, 0);\n\n    // --- Buttons below the title ---\n    this.playButton = this.createButton(this.scale.height * 0.68, \"▶ PLAY\");\n    this.settingsButton = this.createButton(this.scale.height * 0.78, \"⚙ SETTINGS\");\n    this.quitButton = this.createButton(this.scale.height * 0.88, \"✖ QUIT\");\n\n    // --- Button functionality ---\n    this.playButton.on(\"pointerup\", () => {\n      this.cameras.main.fadeOut(500, 0, 0, 0);\n      this.time.delayedCall(500, () => this.scene.start(\"Instructions\"));\n    });\n\n    this.settingsButton.on(\"pointerup\", () => {\n      this.settingsButton.setText(\"⚙ Coming Soon!\");\n      this.tweens.add({\n        targets: this.settingsButton,\n        alpha: 0.5,\n        yoyo: true,\n        duration: 200,\n      });\n    });\n\n    this.quitButton.on(\"pointerup\", () => {\n      this.quitButton.setText(\"✖ Not available in browser\");\n      this.tweens.add({\n        targets: this.quitButton,\n        alpha: 0.5,\n        yoyo: true,\n        duration: 300,\n      });\n    });\n\n    // --- Handle resize events dynamically ---\n    this.scale.on(\"resize\", () => this.refreshLayout());\n  }\n\n  private refreshLayout(): void {\n    const { width, height } = this.scale;\n    this.cameras.resize(width, height);\n\n    // --- Background ---\n    if (!this.background) {\n      this.background = this.add.image(0, 0, \"background\").setOrigin(0);\n    }\n    this.background.setDisplaySize(width, height);\n\n    // --- Title ---\n    const baseFontSize = 72;\n    if (!this.title) {\n      this.title = this.add\n        .text(width / 2, height * 0.45, \"T  W  I  N  E  R  T  I  A\", {\n          fontFamily: \"Arial Black\",\n          fontSize: `${baseFontSize}px`,\n          color: \"#00ffff\",\n          stroke: \"#000000\",\n          strokeThickness: 8,\n          shadow: { offsetX: 0, offsetY: 0, color: \"#00ffff\", blur: 20, fill: true },\n        })\n        .setOrigin(0.5);\n    }\n\n    // Animate the title for a fun pulse effect\n    this.tweens.add({\n      targets: this.title,\n      scale: { from: 1, to: 1.05 },\n      duration: 1000,\n      yoyo: true,\n      repeat: -1,\n      ease: \"Sine.easeInOut\",\n    });\n  }\n\n  private createButton(y: number, label: string): GameObjects.Text {\n    const btn = this.add\n      .text(this.scale.width / 2, y, label, {\n        fontFamily: \"Arial Black\",\n        fontSize: \"36px\",\n        color: \"#ffffff\",\n      })\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on(\"pointerover\", () =>\n        btn.setStyle({ color: \"#00e5ff\", stroke: \"#00ffff\", strokeThickness: 3 })\n      )\n      .on(\"pointerout\", () =>\n        btn.setStyle({ color: \"#ffffff\", stroke: \"#000000\", strokeThickness: 0 })\n      );\n\n    return btn;\n  }\n}\n","import * as Phaser from 'phaser';\r\n\r\nexport class Instructions extends Phaser.Scene {\r\n  private background!: Phaser.GameObjects.Rectangle;\r\n  private title!: Phaser.GameObjects.Text;\r\n  private instructions!: Phaser.GameObjects.Text;\r\n  private prompt!: Phaser.GameObjects.Text;\r\n  private startKey!: Phaser.Input.Keyboard.Key;\r\n\r\n  constructor() {\r\n    super('Instructions');\r\n  }\r\n\r\n  create() {\r\n    const { width, height } = this.scale; // ✅ full dynamic screen size\r\n\r\n    // Semi-transparent dark background\r\n    this.background = this.add.rectangle(width / 2, height / 2, width, height, 0x000000, 0.8);\r\n\r\n    // Title text\r\n    this.title = this.add.text(width / 2, height * 0.25, '🕹️ HOW TO PLAY 🕹️', {\r\n      fontSize: '48px',\r\n      color: '#00ffcc',\r\n      fontFamily: 'Arial Black',\r\n      align: 'center',\r\n    }).setOrigin(0.5);\r\n\r\n    // Instructions (more spaced and readable)\r\n    this.instructions = this.add.text(\r\n      width / 2,\r\n      height * 0.5,\r\n      `➡ Move: Arrow Keys\r\n🕶 Switch Worlds: [SPACE]\r\n💎 Collect Orbs to Win\r\n⚠ Avoid Obstacles\r\n💚 Reach the Green Portal`,\r\n      {\r\n        fontSize: '28px',\r\n        color: '#ffffff',\r\n        fontFamily: 'Arial',\r\n        align: 'center',\r\n        lineSpacing: 10,\r\n      }\r\n    ).setOrigin(0.5);\r\n\r\n    // Bottom prompt\r\n    this.prompt = this.add.text(\r\n      width / 2,\r\n      height * 0.8,\r\n      'Press [ENTER] to Start',\r\n      {\r\n        fontSize: '30px',\r\n        color: '#00ff00',\r\n        fontFamily: 'Arial',\r\n      }\r\n    ).setOrigin(0.5);\r\n\r\n    // ✅ Keyboard setup (safe check)\r\n    if (this.input.keyboard) {\r\n      this.startKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\r\n    }\r\n\r\n    // Fade-in animation for smoother entry\r\n    this.tweens.add({\r\n      targets: [this.background, this.title, this.instructions, this.prompt],\r\n      alpha: { from: 0, to: 1 },\r\n      duration: 1000,\r\n      ease: 'Sine.easeInOut',\r\n    });\r\n  }\r\n\r\n  // ✅ Phaser update with override\r\n  override update(): void {\r\n    if (this.startKey && Phaser.Input.Keyboard.JustDown(this.startKey)) {\r\n      // Fade out before switching\r\n      this.tweens.add({\r\n        targets: [this.background, this.title, this.instructions, this.prompt],\r\n        alpha: 0,\r\n        duration: 400,\r\n        onComplete: () => this.scene.start('Game'),\r\n      });\r\n    }\r\n  }\r\n}\r\n","export class Kiro {\r\n  private currentWorld: \"light\" | \"shadow\" = \"light\";\r\n\r\n  toggleWorld(): \"light\" | \"shadow\" {\r\n    this.currentWorld = this.currentWorld === \"light\" ? \"shadow\" : \"light\";\r\n    console.log(`[KIRO] Switched to ${this.currentWorld.toUpperCase()} WORLD`);\r\n    return this.currentWorld;\r\n  }\r\n\r\n  getCurrentWorld(): \"light\" | \"shadow\" {\r\n    return this.currentWorld;\r\n  }\r\n\r\n  log(world: \"light\" | \"shadow\", action: string, reflection: string) {\r\n    console.log(`[${world.toUpperCase()} WORLD] ${action} → ${reflection}`);\r\n  }\r\n}\r\n","// twinertia/src/client/game/scenes/Game.ts\nimport * as Phaser from \"phaser\";\nimport { Kiro } from \"../logic/Kiro\";\n\nexport class Game extends Phaser.Scene {\n  private kiro!: Kiro;\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  private worldText!: Phaser.GameObjects.Text;\n\n  private lightGroup!: Phaser.Physics.Arcade.StaticGroup;\n  private shadowGroup!: Phaser.Physics.Arcade.StaticGroup;\n\n  private collectibles!: Phaser.Physics.Arcade.Group;\n  private collectedCount: number = 0;\n  private totalOrbs: number = 0;\n  private orbText!: Phaser.GameObjects.Text;\n  private goal!: Phaser.GameObjects.Rectangle;\n  private hazard!: Phaser.GameObjects.Rectangle;\n\n  private player!: Phaser.Physics.Arcade.Sprite;\n\n  // Start world = light\n  private currentWorld: \"light\" | \"shadow\" = \"light\";\n  private isTransitioning: boolean = false;\n\n  private isDead: boolean = false;\n\n  private lightEnergy: number = 100;\n  private shadowEnergy: number = 100;\n  private energyDecayRate: number = 5;\n  private energyText!: Phaser.GameObjects.Text;\n\n  // Shadow timer\n  private shadowTimer: number = 0;\n  private shadowLimit: number = 8; // seconds allowed in shadow\n  private shadowTimerText?: Phaser.GameObjects.Text;\n\n  // Lives\n  private lives: number = 3;\n  private lifeIcons: Phaser.GameObjects.Rectangle[] = [];\n\n  constructor() {\n    super(\"Game\");\n  }\n\n  create(): void {\n\n    const bg = this.add.image(0, 0, \"background\")\n  .setOrigin(0)\n  .setScrollFactor(0)\n  .setDepth(-10)\n  .setDisplaySize(this.cameras.main.width, this.cameras.main.height);\n\n    // reset state on create\n    this.isDead = false;\n    this.kiro = new Kiro();\n\n    // starting lives\n    this.lives = 3;\n    this.lifeIcons = [];\n\n    // --- Animations ---\n    this.anims.create({\n      key: \"boy-idle\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 0, end: 6 }),\n      frameRate: 0,\n      repeat: 0,\n    });\n    this.anims.create({\n      key: \"boy-run\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 14, end: 20 }),\n      frameRate: 0,\n      repeat: -1,\n    });\n    this.anims.create({\n      key: \"boy-jump\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 21, end: 27 }),\n      frameRate: 0,\n      repeat: 0,\n    });\n\n    // --- Player setup ---\n    this.player = this.physics.add.sprite(100, 450, \"boy\", 0);\n    this.player.setOrigin(0.5, 1);\n    this.player.play(\"boy-idle\");\n    this.player.setCollideWorldBounds(true);\n    this.player.setGravityY(500);\n    this.player.setBounce(0);\n    this.player.setSize(32, 60);\n    this.player.setOffset(13, 18);\n    this.player.setFriction(1, 1);\n\n\n    // --- Groups & Platforms ---\n    this.lightGroup = this.physics.add.staticGroup();\n    this.shadowGroup = this.physics.add.staticGroup();\n\n    // Requirement 9: first bar same for both worlds -> create at same position\n    this.createLightPlatform(100, 500, 200, 20); // first light platform\n    this.createShadowPlatform(100, 500, 200, 20); // first shadow platform (same)\n\n    // remaining platforms (keeps your previous layout but first bar is same)\n    this.createLightPlatform(400, 400, 150, 20);\n    this.createLightPlatform(650, 350, 200, 20);\n    this.createShadowPlatform(400, 500, 150, 20);\n    this.createShadowPlatform(600, 450, 150, 20);\n\n    // --- Hazard (shadow world) ---\n    this.hazard = this.add.rectangle(650, 330, 50, 20, 0xff0000);\n    this.physics.add.existing(this.hazard, true);\n\n    // --- Collectibles (shadow world) ---\n    this.collectibles = this.physics.add.group({ allowGravity: false, immovable: true });\n    const orbPositions = [\n      { x: 500, y: 470 },\n      { x: 600, y: 430 },\n      { x: 700, y: 400 },\n    ];\n    orbPositions.forEach((pos) => {\n      const orb = this.add.circle(pos.x, pos.y, 8, 0x00ffff);\n      this.physics.add.existing(orb);\n      const orbBody = orb.body as Phaser.Physics.Arcade.Body;\n      orbBody.setAllowGravity(false);\n      orbBody.setImmovable(true);\n      // initial state: invisible in light world (req #10)\n      orb.setVisible(false);\n      orbBody.enable = false;\n      (orb as any).collected = false;\n      // small pulse for shadow visibility (will be visible only in shadow)\n      this.tweens.add({\n        targets: orb,\n        scale: { from: 1, to: 1.3 },\n        alpha: { from: 0.8, to: 1 },\n        duration: 800,\n        yoyo: true,\n        repeat: -1,\n      });\n      this.collectibles.add(orb);\n    });\n\n    this.collectedCount = 0;\n    this.totalOrbs = orbPositions.length;\n\n    // --- Goal (light world) ---\nthis.goal = this.add.rectangle(800, 300, 40, 60, 0x888888);\nthis.physics.add.existing(this.goal, true);\nthis.lightGroup.add(this.goal);\n\n// make sure we detect collision with player\nthis.physics.add.overlap(this.player, this.goal, () => this.reachGoal(), undefined, this);\n\n// create a green overlay for the goal\nconst goalOverlay = this.add.rectangle(this.goal.x, this.goal.y, this.goal.width, this.goal.height, 0x00ff00, 0);\ngoalOverlay.setOrigin(this.goal.originX, this.goal.originY);\ngoalOverlay.setDepth(50);\ngoalOverlay.setVisible(false);\n(this.goal as any).overlay = goalOverlay;\n\n    // --- Collisions & Overlaps ---\n    this.physics.add.collider(this.player, this.lightGroup);\n    this.physics.add.collider(this.player, this.shadowGroup);\n    this.physics.add.overlap(\n      this.player,\n      this.collectibles,\n      (_player, orb) =>\n        this.collectItem(\n          _player as Phaser.GameObjects.GameObject,\n          orb as Phaser.GameObjects.GameObject & { body?: Phaser.Physics.Arcade.Body; collected?: boolean }\n        ),\n      undefined,\n      this\n    );\n    this.physics.add.overlap(this.player, this.goal, this.reachGoal, undefined, this);\n    this.physics.add.overlap(this.player, this.hazard, this.hitHazard, undefined, this);\n\n    // --- UI ---\n    this.cursors = this.input.keyboard!.createCursorKeys();\n    this.worldText = this.add\n      .text(10, 10, \"World: LIGHT\", {\n        fontFamily: \"monospace\",\n        fontSize: \"20px\",\n        color: \"#ffffff\",\n      })\n      .setScrollFactor(0);\n\n    this.energyText = this.add\n      .text(10, 40, \"Energy: Light 100 | Shadow 100\", {\n        fontFamily: \"monospace\",\n        fontSize: \"18px\",\n        color: \"#ffffaa\",\n      })\n      .setScrollFactor(0);\n\n    this.orbText = this.add\n      .text(10, 70, `Orbs: 0/${this.totalOrbs}`, {\n        fontFamily: \"monospace\",\n        fontSize: \"18px\",\n        color: \"#00ffff\",\n      })\n      .setScrollFactor(0);\n\n    // Lives UI (top-right)\n    this.createLifeUI();\n\n    // Timer text (hidden until entering shadow)\n    this.shadowTimerText = this.add\n      .text(10, 100, `Time: ${this.shadowLimit.toFixed(1)}s`, {\n        fontFamily: \"monospace\",\n        fontSize: \"16px\",\n        color: \"#ff66cc\",\n      })\n      .setScrollFactor(0);\n    this.shadowTimerText.setVisible(false);\n\n    const isLight = this.currentWorld === \"light\";\n    this.shadowGroup.children.each((obj) => {\n      const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n      go.setVisible(!isLight);\n      const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n      if (body) {\n        body.enable = !isLight;\n        if (!isLight) body.updateFromGameObject();\n      }\n      return true;\n    });\n\n    // collectibles already set invisible above\n\n    this.cameras.main.startFollow(this.player, true, 0.1, 0.1);\n    this.cameras.main.setBackgroundColor(\"#111122\");\n  }\n\n  override update(_time: number, _delta: number): void {\n    if (this.isDead) return;\n\n    const body = this.player.body as Phaser.Physics.Arcade.Body;\n    const speed = 200;\n    const jumpSpeed = -350;\n    body.setVelocityX(0);\n\n    if (this.cursors.left?.isDown) {\n      body.setVelocityX(-speed);\n      this.player.setFlipX(true);\n      if (body.blocked.down) this.player.play(\"boy-run\", true);\n    } else if (this.cursors.right?.isDown) {\n      body.setVelocityX(speed);\n      this.player.setFlipX(false);\n      if (body.blocked.down) this.player.play(\"boy-run\", true);\n    } else if (body.blocked.down) {\n      this.player.play(\"boy-idle\", true);\n    }\n\n    if (this.cursors.up?.isDown && body.blocked.down) {\n      body.setVelocityY(jumpSpeed);\n      this.player.play(\"boy-jump\", true);\n    }\n\n    if (this.player.y > 600) this.loseLife(); // falling off screen uses loseLife()\n\n    // Energy drain\n    if (this.currentWorld === \"light\")\n      this.lightEnergy = Math.max(0, this.lightEnergy - this.energyDecayRate * (_delta / 1000));\n    else this.shadowEnergy = Math.max(0, this.shadowEnergy - this.energyDecayRate * (_delta / 1000));\n\n    // Timer handling (req 1-4,11)\n    if (this.currentWorld === \"shadow\") {\n      // compute remaining\n      const elapsed = (this.time.now - this.shadowTimer) / 1000;\n      const remaining = Math.max(0, this.shadowLimit - elapsed);\n\n      // show timer text\n      if (this.shadowTimerText) {\n        this.shadowTimerText.setText(`Time: ${remaining.toFixed(1)}s`);\n        this.shadowTimerText.setVisible(true);\n      }\n\n      // warning flash when near end\n      if (remaining <= 2 && remaining > 0) {\n        this.cameras.main.flash(80, 255, 50, 50);\n      }\n\n      // when time runs out => instant death (req 11)\n      if (remaining <= 0) {\n        this.loseLife();\n        return; // skip further updates this frame\n      }\n    } else {\n      // hide timer text in light world (req 2)\n      if (this.shadowTimerText) this.shadowTimerText.setVisible(false);\n    }\n\n    // update energy text (keeps existing format)\n    this.energyText.setText(`Energy: Light ${this.lightEnergy.toFixed(0)} | Shadow ${this.shadowEnergy.toFixed(0)}`);\n\n    // die if energy below zero (existing)\n    if (this.lightEnergy <= 0 || this.shadowEnergy <= 0) {\n      this.loseLife();\n      return;\n    }\n\n    // --- World switch: SPACE toggles opposite world once (req 6) ---\n    if (Phaser.Input.Keyboard.JustDown(this.cursors.space!)) {\n      const newWorld = this.currentWorld === \"light\" ? \"shadow\" : \"light\";\n      this.fadeWorldTransition(newWorld);\n    }\n  }\n\n  private fadeWorldTransition(newWorld: \"light\" | \"shadow\") {\n    if (this.isTransitioning || newWorld === this.currentWorld) return;\n    this.isTransitioning = true;\n\n    const cam = this.cameras.main;\n    cam.fadeOut(150, 0, 0, 0);\n\n    cam.once(\"camerafadeoutcomplete\", () => {\n      const isLight: boolean = newWorld === \"light\"; // declare here\n\n      // Update UI & background\n      this.worldText.setText(`World: ${newWorld.toUpperCase()}`);\n      cam.setBackgroundColor(isLight ? \"#111122\" : \"#220011\");\n\n      // Light group\n      this.lightGroup.children.each((obj) => {\n        const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n        go.setVisible(isLight);\n        const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n        if (body) {\n          body.enable = isLight;\n          if (isLight) body.updateFromGameObject();\n        }\n        return true;\n      });\n\n      // Shadow group\n      this.shadowGroup.children.each((obj) => {\n        const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n        go.setVisible(!isLight);\n        const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n        if (body) {\n          body.enable = !isLight;\n          if (!isLight) body.updateFromGameObject();\n        }\n        return true;\n      });\n\n      // Collectibles\n      this.collectibles.children.each((obj) => {\n        const orb = obj as Phaser.GameObjects.Arc & { collected?: boolean; body?: Phaser.Physics.Arcade.Body };\n        const orbBody = orb.body;\n        const collected = !!orb.collected;\n        if (!isLight && !collected) {\n          orb.setVisible(true);\n          if (orbBody) orbBody.enable = true;\n        } else {\n          orb.setVisible(false);\n          if (orbBody) orbBody.enable = false;\n        }\n        return true;\n      });\n\n      // Timer: reset every shadow entry\n      if (newWorld === \"shadow\") {\n        this.shadowTimer = this.time.now;\n        if (this.shadowTimerText) {\n          this.shadowTimerText.setText(`Time: ${this.shadowLimit.toFixed(1)}s`);\n          this.shadowTimerText.setVisible(true);\n        }\n      } else {\n        if (this.shadowTimerText) this.shadowTimerText.setVisible(false);\n      }\n\n      cam.fadeIn(150, 0, 0, 0);\n      cam.once(\"camerafadeincomplete\", () => {\n        this.currentWorld = newWorld;\n        this.isTransitioning = false;\n      });\n    });\n  }\n\n  private createLightPlatform(x: number, y: number, w: number, h: number) {\n    const plat = this.add.rectangle(x, y, w, h, 0xffffff);\n    this.physics.add.existing(plat, true);\n    this.lightGroup.add(plat);\n  }\n\n  private createShadowPlatform(x: number, y: number, w: number, h: number) {\n    const plat = this.add.rectangle(x, y, w, h, 0xff5555, 0.5);\n    this.physics.add.existing(plat, true);\n    this.shadowGroup.add(plat);\n  }\n\n  // --- collectItem ---\n  private collectItem(\n    _playerObj: Phaser.GameObjects.GameObject,\n    orbObj: Phaser.GameObjects.GameObject & { body?: Phaser.Physics.Arcade.Body; collected?: boolean }\n  ): void {\n    if (this.currentWorld !== \"shadow\") return;\n\n    const orb = orbObj;\n    const orbBody = orb.body;\n\n    if (orb.collected) return;\n\n    orb.collected = true;\n    (orb as Phaser.GameObjects.Arc).setVisible(false);\n    if (orbBody) orbBody.enable = false;\n\n    this.collectedCount++;\n    this.orbText.setText(`Orbs: ${this.collectedCount}/${this.totalOrbs}`);\n    this.lightEnergy = Math.min(100, this.lightEnergy + 20);\n\n    const feedback = this.add.text(this.player.x - 30, this.player.y - 60, \"+Energy\", {\n      fontFamily: \"monospace\",\n      fontSize: \"16px\",\n      color: \"#00ffcc\",\n    });\n    this.tweens.add({\n      targets: feedback,\n      alpha: 0,\n      y: feedback.y - 20,\n      duration: 800,\n      onComplete: () => feedback.destroy(),\n    });\n\n    if (this.collectedCount >= this.totalOrbs) {\n      // mark goal ready: we won't immediately move the player, but visually prepare the overlay\n      this.goal.setFillStyle(0x00ff00);\n      const overlay = (this.goal as any).overlay as Phaser.GameObjects.Rectangle | undefined;\n      if (overlay) {\n      overlay.setVisible(true);\n      overlay.setAlpha(0);\n    }\n    }\n  }\n\n  private reachGoal() {\n  // Only trigger in the light world\n  if (this.currentWorld !== \"light\") return;\n\n  // Goal locked check\n  if (this.collectedCount < this.totalOrbs) {\n    const msg = this.add.text(this.player.x - 60, this.player.y - 80, \"Goal Locked!\", {\n      fontSize: \"18px\",\n      color: \"#ff3333\",\n      fontFamily: \"monospace\",\n    });\n    this.tweens.add({\n      targets: msg,\n      alpha: 0,\n      duration: 700,\n      delay: 800,\n      onComplete: () => msg.destroy(),\n    });\n    return;\n  }\n\n  // Prevent re-trigger\n  if (this.isDead) return;\n  this.isDead = true;\n\n  // Make sure goal is green and overlay ready\n  this.goal.setFillStyle(0x00ff00);\n  const overlay = (this.goal as any).overlay as Phaser.GameObjects.Rectangle | undefined;\n  if (overlay) {\n    overlay.setVisible(true);\n    overlay.setAlpha(0);\n    overlay.setDepth(50); // ensure overlay appears above everything\n  }\n\n  // Disable player physics and bring to front\n  this.physics.world.disable(this.player);\n  this.player.setDepth(25);\n\n  // Tween: player fades + overlay glows in together\n  const targetX = this.goal.x as number;\n  const targetY = (this.goal.y as number) - (this.goal.height ?? 40) / 4;\n\n  // Subtle goal glow pulse\n  this.tweens.add({\n  targets: overlay,\n  scale: { from: 1, to: 1.3 },\n  alpha: { from: 0.2, to: 1 },\n  duration: 400,\n  yoyo: true,\n  repeat: 0,\n});\n\n  // Fade overlay in (green exit fade)\n  if (overlay) {\n    this.tweens.add({\n      targets: overlay,\n      alpha: { from: 0, to: 1 },\n      duration: 400,\n      ease: \"Sine.easeInOut\",\n    });\n  }\n\n  // Tween player into goal (fade out & shrink)\n  this.tweens.add({\n    targets: this.player,\n    x: targetX,\n    y: targetY,\n    scale: 0.2,\n    alpha: 0,\n    duration: 400,\n    ease: \"Sine.easeInOut\",\n    onUpdate: () => {\n      const a = this.player.alpha;\n      const tintBlend = Phaser.Display.Color.Interpolate.ColorWithColor(\n        Phaser.Display.Color.ValueToColor(0xffffff),\n        Phaser.Display.Color.ValueToColor(0x00ff00),\n        100,\n        100 - a * 100\n      );\n      this.player.setTint(Phaser.Display.Color.GetColor(tintBlend.r, tintBlend.g, tintBlend.b));\n    },\n    onComplete: () => {\n      this.player.setVisible(false);\n      this.player.clearTint();\n\n      const completeText = this.add.text(\n        this.cameras.main.centerX,\n        this.cameras.main.centerY - 80,\n        \"LEVEL COMPLETE!\",\n        {\n          fontSize: \"34px\",\n          color: \"#00ff00\",\n          fontFamily: \"monospace\",\n        }\n      );\n      completeText.setOrigin(0.5);\n      completeText.setDepth(30);\n\n      this.time.delayedCall(1200, () => {\n        this.scene.pause();\n      });\n    },\n  });\n}\n\n  private hitHazard() {\n    // Immediate death when touching hazard in shadow world only\n    if (this.currentWorld === \"shadow\" && !this.isDead) {\n      this.loseLife();\n    }\n  }\n\n  /**\n   * loseLife - called for any death mechanism (hazard, fall, timer out, energy drain).\n   * Decrements life count, removes a life icon; if lives remain -> respawn player;\n   * if no lives remain -> full restart of scene (reset everything).\n   */\n  private loseLife() {\n    // prevent repeated calls\n    if (this.isDead) return;\n    this.isDead = true;\n\n    // decrement lives\n    this.lives = Math.max(0, this.lives - 1);\n\n    // vanish one life icon visually\n    const removedIcon = this.lifeIcons.pop();\n    if (removedIcon) {\n      this.tweens.add({\n        targets: removedIcon,\n        scaleX: 0,\n        scaleY: 0,\n        alpha: 0,\n        duration: 400,\n        ease: \"Power2\",\n        onComplete: () => removedIcon.destroy(),\n      });\n    }\n\n    // instant death visual: tint and stop animations\n    this.player.setTint(0xff0000);\n    this.player.setVelocity(0, 0);\n    this.player.anims.stop();\n\n\n\n    // fade out player & twin then decide next action\n    this.tweens.add({\n      targets: [this.player],\n      alpha: 0,\n      duration: 600,\n      ease: \"Power2\",\n      onComplete: () => {\n        if (this.lives <= 0) {\n          // all lives gone -> fully restart the scene (reset everything)\n          this.scene.restart();\n        } else {\n          // respawn player (do NOT restart scene)\n          this.respawnPlayer();\n        }\n      },\n    });\n  }\n\n  private respawnPlayer() {\n  // small delay then put player back at spawn\n  this.time.delayedCall(500, () => {\n    // re-enable player visibility and reset properties\n    this.player.clearTint();\n    this.player.setAlpha(1);\n    this.player.setVisible(true);\n\n    // make sure physics body is active again\n    this.physics.world.enable(this.player);\n\n    // position player on the first platform (not in the air)\n    this.player.setPosition(100, 440);\n    this.player.setVelocity(0, 0);\n\n    // reset world to light and ensure collisions are ready\n    this.currentWorld = \"light\";\n    this.isDead = false;\n\n    // make sure the player is standing properly\n    const body = this.player.body as Phaser.Physics.Arcade.Body;\n    body.updateFromGameObject();\n    body.checkCollision.none = false;\n\n    // refresh physics for all static bodies\n    this.physics.world.collide(this.player, this.lightGroup);\n\n    // fade player back in for clarity\n    this.tweens.add({\n      targets: [this.player],\n      alpha: 1,\n      duration: 300,\n      ease: \"Power2\",\n    });\n  });\n}\n\n  private createLifeUI() {\n    // create 3 small rectangles in the top-right\n    // using camera width to place them; setScrollFactor(0) so they stay in UI area\n    const startX = this.cameras.main.width - 20;\n    const y = 20;\n    const gap = 28;\n\n    // destroy any existing icons if present\n    this.lifeIcons.forEach((ic) => ic.destroy());\n    this.lifeIcons = [];\n\n    for (let i = 0; i < this.lives; i++) {\n      const x = startX - i * gap;\n      const rect = this.add.rectangle(x, y, 18, 18, 0xff0000).setOrigin(1, 0.5).setScrollFactor(0);\n      this.lifeIcons.unshift(rect); // unshift so pop removes last-life (leftmost)\n    }\n  }\n}\n","import { Scene } from 'phaser';\nimport * as Phaser from 'phaser';\n\nexport class GameOver extends Scene {\n  camera: Phaser.Cameras.Scene2D.Camera;\n  background: Phaser.GameObjects.Image;\n  gameover_text: Phaser.GameObjects.Text;\n\n  constructor() {\n    super('GameOver');\n  }\n\n  create() {\n    // Configure camera\n    this.camera = this.cameras.main;\n    this.camera.setBackgroundColor(0xff0000);\n\n    // Background – create once, full-screen\n    this.background = this.add.image(0, 0, 'background').setOrigin(0).setAlpha(0.5);\n\n    // \"Game Over\" text – created once and scaled responsively\n    this.gameover_text = this.add\n      .text(0, 0, 'Game Over', {\n        fontFamily: 'Arial Black',\n        fontSize: '64px',\n        color: '#ffffff',\n        stroke: '#000000',\n        strokeThickness: 8,\n        align: 'center',\n      })\n      .setOrigin(0.5);\n\n    // Initial responsive layout\n    this.updateLayout(this.scale.width, this.scale.height);\n\n    // Update layout on canvas resize / orientation change\n    this.scale.on('resize', (gameSize: Phaser.Structs.Size) => {\n      const { width, height } = gameSize;\n      this.updateLayout(width, height);\n    });\n\n    // Return to Main Menu on tap / click\n    this.input.once('pointerdown', () => {\n      this.scene.start('MainMenu');\n    });\n  }\n\n  private updateLayout(width: number, height: number): void {\n    // Resize camera viewport to prevent black bars\n    this.cameras.resize(width, height);\n\n    // Stretch background to fill entire screen\n    if (this.background) {\n      this.background.setDisplaySize(width, height);\n    }\n\n    // Compute scale factor (never enlarge above 1×)\n    const scaleFactor = Math.min(Math.min(width / 1024, height / 768), 1);\n\n    // Centre and scale the game-over text\n    if (this.gameover_text) {\n      this.gameover_text.setPosition(width / 2, height / 2);\n      this.gameover_text.setScale(scaleFactor);\n    }\n  }\n}\n","import * as Phaser from 'phaser';\nimport { Boot } from '../game/scenes/Boot';\nimport { Preloader } from '../game/scenes/Preloader';\nimport { MainMenu } from '../game/scenes/MainMenu';\nimport { Instructions } from '../game/scenes/instructions';\nimport { Game as MainGame } from '../game/scenes/Game';\nimport { GameOver } from '../game/scenes/GameOver';\n\n// ---------------------------------------------\n// Game Configuration\n// ---------------------------------------------\nconst config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  parent: 'game-container',\n  backgroundColor: '#028af8',\n\n  scale: {\n    mode: Phaser.Scale.RESIZE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: 1024,\n    height: 768,\n  },\n\n  physics: {\n    default: 'arcade',\n    arcade: {\n      debug: false, // set to true if you want to see physics boxes\n      gravity: { x: 0, y: 0 }, // ✅ include both x and y to satisfy Vector2Like\n    },\n  },\n\n  scene: [Boot, Preloader, MainMenu, Instructions, MainGame, GameOver],\n};\n\n// ---------------------------------------------\n// Boot Function\n// ---------------------------------------------\nconst StartGame = (parent: string) => {\n  return new Phaser.Game({ ...config, parent });\n};\n\nexport default StartGame;\n","import StartGame from './game/main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  StartGame('game-container');\n});\n"],"names":["Boot","Scene","constructor","super","preload","this","load","image","create","scene","start","Preloader","init","add","rectangle","setStrokeStyle","bar","on","progress","width","setPath","spritesheet","frameWidth","frameHeight","margin","spacing","MainMenu","__publicField","background","title","refreshLayout","cameras","main","fadeIn","playButton","createButton","scale","height","settingsButton","quitButton","fadeOut","time","delayedCall","setText","tweens","targets","alpha","yoyo","duration","resize","setOrigin","setDisplaySize","text","fontFamily","fontSize","color","stroke","strokeThickness","shadow","offsetX","offsetY","blur","fill","from","to","repeat","ease","y","label","btn","setInteractive","useHandCursor","setStyle","Instructions","Phaser.Scene","align","instructions","lineSpacing","prompt","input","keyboard","startKey","addKey","Phaser.Input","Keyboard","KeyCodes","ENTER","update","JustDown","onComplete","Kiro","toggleWorld","currentWorld","console","log","toUpperCase","getCurrentWorld","world","action","reflection","Game","setScrollFactor","setDepth","isDead","kiro","lives","lifeIcons","anims","key","frames","generateFrameNumbers","end","frameRate","player","physics","sprite","play","setCollideWorldBounds","setGravityY","setBounce","setSize","setOffset","setFriction","lightGroup","staticGroup","shadowGroup","createLightPlatform","createShadowPlatform","hazard","existing","collectibles","group","allowGravity","immovable","orbPositions","x","forEach","pos","orb","circle","orbBody","body","setAllowGravity","setImmovable","setVisible","enable","collected","collectedCount","totalOrbs","length","goal","overlap","reachGoal","goalOverlay","originX","originY","overlay","collider","_player","collectItem","hitHazard","cursors","createCursorKeys","worldText","energyText","orbText","createLifeUI","shadowTimerText","shadowLimit","toFixed","isLight","children","each","obj","updateFromGameObject","startFollow","setBackgroundColor","_time","_delta","setVelocityX","_a","left","isDown","setFlipX","blocked","down","_b","right","_c","up","setVelocityY","loseLife","lightEnergy","Math","max","energyDecayRate","shadowEnergy","elapsed","now","shadowTimer","remaining","flash","space","newWorld","fadeWorldTransition","isTransitioning","cam","once","w","h","plat","_playerObj","orbObj","min","feedback","destroy","setFillStyle","setAlpha","msg","delay","disable","targetX","targetY","onUpdate","a","tintBlend","Phaser.Display","Color","Interpolate","ColorWithColor","ValueToColor","setTint","GetColor","r","g","b","clearTint","completeText","centerX","centerY","pause","removedIcon","pop","scaleX","scaleY","setVelocity","stop","restart","respawnPlayer","setPosition","checkCollision","none","collide","startX","ic","i","rect","unshift","GameOver","camera","gameover_text","updateLayout","gameSize","scaleFactor","setScale","config","type","Phaser.AUTO","parent","backgroundColor","mode","Phaser.Scale","RESIZE","autoCenter","CENTER_BOTH","default","arcade","debug","gravity","MainGame","document","addEventListener","Phaser.Game"],"mappings":"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"}