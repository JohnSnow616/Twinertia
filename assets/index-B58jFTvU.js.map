{"version":3,"file":"index-B58jFTvU.js","sources":["../../../src/client/game/scenes/Boot.ts","../../../src/client/game/scenes/GameOver.ts","../../../src/client/game/scenes/Game.ts","../../../src/client/game/scenes/MainMenu.ts","../../../src/client/game/scenes/Preloader.ts","../../../src/client/game/main.ts","../../../src/client/main.ts"],"sourcesContent":["import { Scene } from 'phaser';\n\nexport class Boot extends Scene {\n  constructor() {\n    super('Boot');\n  }\n\n  preload() {\n    //  The Boot Scene is typically used to load in any assets you require for your Preloader, such as a game logo or background.\n    //  The smaller the file size of the assets, the better, as the Boot Scene itself has no preloader.\n\n    this.load.image('background', 'assets/bg.png');\n  }\n\n  create() {\n    this.scene.start('Preloader');\n  }\n}\n","import { Scene } from 'phaser';\nimport * as Phaser from 'phaser';\n\nexport class GameOver extends Scene {\n  camera: Phaser.Cameras.Scene2D.Camera;\n  background: Phaser.GameObjects.Image;\n  gameover_text: Phaser.GameObjects.Text;\n\n  constructor() {\n    super('GameOver');\n  }\n\n  create() {\n    // Configure camera\n    this.camera = this.cameras.main;\n    this.camera.setBackgroundColor(0xff0000);\n\n    // Background – create once, full-screen\n    this.background = this.add.image(0, 0, 'background').setOrigin(0).setAlpha(0.5);\n\n    // \"Game Over\" text – created once and scaled responsively\n    this.gameover_text = this.add\n      .text(0, 0, 'Game Over', {\n        fontFamily: 'Arial Black',\n        fontSize: '64px',\n        color: '#ffffff',\n        stroke: '#000000',\n        strokeThickness: 8,\n        align: 'center',\n      })\n      .setOrigin(0.5);\n\n    // Initial responsive layout\n    this.updateLayout(this.scale.width, this.scale.height);\n\n    // Update layout on canvas resize / orientation change\n    this.scale.on('resize', (gameSize: Phaser.Structs.Size) => {\n      const { width, height } = gameSize;\n      this.updateLayout(width, height);\n    });\n\n    // Return to Main Menu on tap / click\n    this.input.once('pointerdown', () => {\n      this.scene.start('MainMenu');\n    });\n  }\n\n  private updateLayout(width: number, height: number): void {\n    // Resize camera viewport to prevent black bars\n    this.cameras.resize(width, height);\n\n    // Stretch background to fill entire screen\n    if (this.background) {\n      this.background.setDisplaySize(width, height);\n    }\n\n    // Compute scale factor (never enlarge above 1×)\n    const scaleFactor = Math.min(Math.min(width / 1024, height / 768), 1);\n\n    // Centre and scale the game-over text\n    if (this.gameover_text) {\n      this.gameover_text.setPosition(width / 2, height / 2);\n      this.gameover_text.setScale(scaleFactor);\n    }\n  }\n}\n","import { Scene } from 'phaser';\nimport * as Phaser from 'phaser';\nimport { IncrementResponse, DecrementResponse, InitResponse } from '../../../shared/types/api';\n\nexport class Game extends Scene {\n  camera: Phaser.Cameras.Scene2D.Camera;\n  background: Phaser.GameObjects.Image;\n  msg_text: Phaser.GameObjects.Text;\n  count: number = 0;\n  countText: Phaser.GameObjects.Text;\n  incButton: Phaser.GameObjects.Text;\n  decButton: Phaser.GameObjects.Text;\n  goButton: Phaser.GameObjects.Text;\n\n  constructor() {\n    super('Game');\n  }\n\n  create() {\n    // Configure camera & background\n    this.camera = this.cameras.main;\n    this.camera.setBackgroundColor(0x222222);\n\n    // Optional: semi-transparent background image if one has been loaded elsewhere\n    this.background = this.add.image(512, 384, 'background').setAlpha(0.25);\n\n    /* -------------------------------------------\n     *  UI Elements\n     * ------------------------------------------- */\n\n    // Display the current count\n    this.countText = this.add\n      .text(512, 340, `Count: ${this.count}`, {\n        fontFamily: 'Arial Black',\n        fontSize: 56,\n        color: '#ffd700',\n        stroke: '#000000',\n        strokeThickness: 10,\n      })\n      .setOrigin(0.5);\n\n    // Fetch the initial counter value from server and update UI\n    void (async () => {\n      try {\n        const response = await fetch('/api/init');\n        if (!response.ok) throw new Error(`API error: ${response.status}`);\n\n        const data = (await response.json()) as InitResponse;\n        this.count = data.count;\n        this.updateCountText();\n      } catch (error) {\n        console.error('Failed to fetch initial count:', error);\n      }\n    })();\n\n    // Button styling helper\n    const createButton = (y: number, label: string, color: string, onClick: () => void) => {\n      const button = this.add\n        .text(512, y, label, {\n          fontFamily: 'Arial Black',\n          fontSize: 36,\n          color: color,\n          backgroundColor: '#444444',\n          padding: {\n            x: 25,\n            y: 12,\n          } as Phaser.Types.GameObjects.Text.TextPadding,\n        })\n        .setOrigin(0.5)\n        .setInteractive({ useHandCursor: true })\n        .on('pointerover', () => button.setStyle({ backgroundColor: '#555555' }))\n        .on('pointerout', () => button.setStyle({ backgroundColor: '#444444' }))\n        .on('pointerdown', onClick);\n      return button;\n    };\n\n    // Increment button\n    this.incButton = createButton(this.scale.height * 0.55, 'Increment', '#00ff00', async () => {\n      try {\n        const response = await fetch('/api/increment', { method: 'POST' });\n        if (!response.ok) throw new Error(`API error: ${response.status}`);\n\n        const data = (await response.json()) as IncrementResponse;\n        this.count = data.count;\n        this.updateCountText();\n      } catch (error) {\n        console.error('Failed to increment count:', error);\n      }\n    });\n\n    // Decrement button\n    this.decButton = createButton(this.scale.height * 0.65, 'Decrement', '#ff5555', async () => {\n      try {\n        const response = await fetch('/api/decrement', { method: 'POST' });\n        if (!response.ok) throw new Error(`API error: ${response.status}`);\n\n        const data = (await response.json()) as DecrementResponse;\n        this.count = data.count;\n        this.updateCountText();\n      } catch (error) {\n        console.error('Failed to decrement count:', error);\n      }\n    });\n\n    // Game Over button – navigates to the GameOver scene\n    this.goButton = createButton(this.scale.height * 0.75, 'Game Over', '#ffffff', () => {\n      this.scene.start('GameOver');\n    });\n\n    // Setup responsive layout\n    this.updateLayout(this.scale.width, this.scale.height);\n    this.scale.on('resize', (gameSize: Phaser.Structs.Size) => {\n      const { width, height } = gameSize;\n      this.updateLayout(width, height);\n    });\n\n    // No automatic navigation to GameOver – users can stay in this scene.\n  }\n\n  updateLayout(width: number, height: number) {\n    // Resize camera viewport to avoid black bars\n    this.cameras.resize(width, height);\n\n    // Center and scale background image to cover screen\n    if (this.background) {\n      this.background.setPosition(width / 2, height / 2);\n      if (this.background.width && this.background.height) {\n        const scale = Math.max(width / this.background.width, height / this.background.height);\n        this.background.setScale(scale);\n      }\n    }\n\n    // Calculate a scale factor relative to a 1024 × 768 reference resolution.\n    // We only shrink on smaller screens – never enlarge above 1×.\n    const scaleFactor = Math.min(Math.min(width / 1024, height / 768), 1);\n\n    if (this.countText) {\n      this.countText.setPosition(width / 2, height * 0.45);\n      this.countText.setScale(scaleFactor);\n    }\n\n    if (this.incButton) {\n      this.incButton.setPosition(width / 2, height * 0.55);\n      this.incButton.setScale(scaleFactor);\n    }\n\n    if (this.decButton) {\n      this.decButton.setPosition(width / 2, height * 0.65);\n      this.decButton.setScale(scaleFactor);\n    }\n\n    if (this.goButton) {\n      this.goButton.setPosition(width / 2, height * 0.75);\n      this.goButton.setScale(scaleFactor);\n    }\n  }\n\n  updateCountText() {\n    this.countText.setText(`Count: ${this.count}`);\n  }\n}\n","import { Scene, GameObjects } from 'phaser';\n\nexport class MainMenu extends Scene {\n  background: GameObjects.Image | null = null;\n  logo: GameObjects.Image | null = null;\n  title: GameObjects.Text | null = null;\n\n  constructor() {\n    super('MainMenu');\n  }\n\n  /**\n   * Reset cached GameObject references every time the scene starts.\n   * The same Scene instance is reused by Phaser, so we must ensure\n   * stale (destroyed) objects are cleared out when the scene restarts.\n   */\n  init(): void {\n    this.background = null;\n    this.logo = null;\n    this.title = null;\n  }\n\n  create() {\n    this.refreshLayout();\n\n    // Re-calculate positions whenever the game canvas is resized (e.g. orientation change).\n    this.scale.on('resize', () => this.refreshLayout());\n\n    this.input.once('pointerdown', () => {\n      this.scene.start('Game');\n    });\n  }\n\n  /**\n   * Positions and (lightly) scales all UI elements based on the current game size.\n   * Call this from create() and from any resize events.\n   */\n  private refreshLayout(): void {\n    const { width, height } = this.scale;\n\n    // Resize camera to new viewport to prevent black bars\n    this.cameras.resize(width, height);\n\n    // Background – stretch to fill the whole canvas\n    if (!this.background) {\n      this.background = this.add.image(0, 0, 'background').setOrigin(0);\n    }\n    this.background!.setDisplaySize(width, height);\n\n    // Logo – keep aspect but scale down for very small screens\n    const scaleFactor = Math.min(width / 1024, height / 768);\n\n    if (!this.logo) {\n      this.logo = this.add.image(0, 0, 'logo');\n    }\n    this.logo!.setPosition(width / 2, height * 0.38).setScale(scaleFactor);\n\n    // Title text – create once, then scale on resize\n    const baseFontSize = 38;\n    if (!this.title) {\n      this.title = this.add\n        .text(0, 0, 'Main Menu', {\n          fontFamily: 'Arial Black',\n          fontSize: `${baseFontSize}px`,\n          color: '#ffffff',\n          stroke: '#000000',\n          strokeThickness: 8,\n          align: 'center',\n        })\n        .setOrigin(0.5);\n    }\n    this.title!.setPosition(width / 2, height * 0.6);\n    this.title!.setScale(scaleFactor);\n  }\n}\n","import { Scene } from 'phaser';\n\nexport class Preloader extends Scene {\n  constructor() {\n    super('Preloader');\n  }\n\n  init() {\n    //  We loaded this image in our Boot Scene, so we can display it here\n    this.add.image(512, 384, 'background');\n\n    //  A simple progress bar. This is the outline of the bar.\n    this.add.rectangle(512, 384, 468, 32).setStrokeStyle(1, 0xffffff);\n\n    //  This is the progress bar itself. It will increase in size from the left based on the % of progress.\n    const bar = this.add.rectangle(512 - 230, 384, 4, 28, 0xffffff);\n\n    //  Use the 'progress' event emitted by the LoaderPlugin to update the loading bar\n    this.load.on('progress', (progress: number) => {\n      //  Update the progress bar (our bar is 464px wide, so 100% = 464px)\n      bar.width = 4 + 460 * progress;\n    });\n  }\n\n  preload() {\n    //  Load the assets for the game - Replace with your own assets\n    this.load.setPath('assets');\n\n    this.load.image('logo', 'logo.png');\n  }\n\n  create() {\n    //  When all the assets have loaded, it's often worth creating global objects here that the rest of the game can use.\n    //  For example, you can define global animations here, so we can use them in other scenes.\n\n    //  Move to the MainMenu. You could also swap this for a Scene Transition, such as a camera fade.\n    this.scene.start('MainMenu');\n  }\n}\n","import { Boot } from './scenes/Boot';\nimport { GameOver } from './scenes/GameOver';\nimport { Game as MainGame } from './scenes/Game';\nimport { MainMenu } from './scenes/MainMenu';\nimport * as Phaser from 'phaser';\nimport { AUTO, Game } from 'phaser';\nimport { Preloader } from './scenes/Preloader';\n\n//  Find out more information about the Game Config at:\n//  https://docs.phaser.io/api-documentation/typedef/types-core#gameconfig\nconst config: Phaser.Types.Core.GameConfig = {\n  type: AUTO,\n  parent: 'game-container',\n  backgroundColor: '#028af8',\n  scale: {\n    // Keep a fixed game resolution but automatically scale it to fit within the available\n    // web-view / device while maintaining aspect ratio.\n    mode: Phaser.Scale.RESIZE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: 1024,\n    height: 768,\n  },\n  scene: [Boot, Preloader, MainMenu, MainGame, GameOver],\n};\n\nconst StartGame = (parent: string) => {\n  return new Game({ ...config, parent });\n};\n\nexport default StartGame;\n","import StartGame from './game/main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  StartGame('game-container');\n});\n"],"names":["Boot","Scene","constructor","super","preload","this","load","image","create","scene","start","GameOver","__publicField","camera","cameras","main","setBackgroundColor","background","add","setOrigin","setAlpha","gameover_text","text","fontFamily","fontSize","color","stroke","strokeThickness","align","updateLayout","scale","width","height","on","gameSize","input","once","resize","setDisplaySize","scaleFactor","Math","min","setPosition","setScale","Game","countText","count","response","fetch","ok","Error","status","data","json","updateCountText","error","console","createButton","y","label","onClick","button","backgroundColor","padding","x","setInteractive","useHandCursor","setStyle","incButton","async","method","decButton","goButton","max","setText","MainMenu","init","logo","title","refreshLayout","Preloader","rectangle","setStrokeStyle","bar","progress","setPath","config","type","AUTO","parent","mode","Phaser.Scale","Scale","RESIZE","autoCenter","CENTER_BOTH","MainGame","document","addEventListener"],"mappings":"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"}