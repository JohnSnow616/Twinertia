{"version":3,"file":"index-hkR6gCj1.js","sources":["../../../src/client/game/scenes/Boot.ts","../../../src/client/game/scenes/Preloader.ts","../../../src/client/game/scenes/MainMenu.ts","../../../src/client/game/scenes/Instructions.ts","../../../src/client/game/logic/Kiro.ts","../../../src/client/game/scenes/Game.ts","../../../src/client/game/scenes/GameOver.ts","../../../src/client/game/main.ts","../../../src/client/main.ts"],"sourcesContent":["import { Scene } from 'phaser';\n\nexport class Boot extends Scene {\n  constructor() {\n    super('Boot');\n  }\n\n  preload() {\n    //  The Boot Scene is typically used to load in any assets you require for your Preloader, such as a game logo or background.\n    //  The smaller the file size of the assets, the better, as the Boot Scene itself has no preloader.\n\n    this.load.image('background', 'assets/bg.png');\n  }\n\n  create() {\n    this.scene.start('Preloader');\n  }\n}\n","import { Scene } from \"phaser\";\n\nexport class Preloader extends Scene {\n  constructor() {\n    super(\"Preloader\");\n  }\n\n  init() {\n    // Background\n    this.add.image(512, 384, \"background\");\n\n    // Progress bar outline\n    this.add.rectangle(512, 384, 468, 32).setStrokeStyle(1, 0xffffff);\n    const bar = this.add.rectangle(512 - 230, 384, 4, 28, 0xffffff);\n\n    // Update bar width as loading progresses\n    this.load.on(\"progress\", (progress: number) => {\n      bar.width = 4 + 460 * progress;\n    });\n  }\n\n  preload() {\n    this.load.setPath(\"assets\");  \n    this.load.image(\"background\", \"assets/bg.png\");\n\n    // ✅ Correct path and frame sizes\n    this.load.spritesheet(\"boy\", \"boy_character.png\", {\n    frameWidth: 67,\n    frameHeight: 76,\n    margin: 0,\n    spacing: 0,\n    });\n  }\n\n  create() {\n    // Move to the Main Menu after loading is complete\n    this.scene.start(\"MainMenu\");\n  }\n}\n","// twinertia/src/client/game/scenes/MainMenu.ts\nimport { Scene, GameObjects } from \"phaser\";\n\nexport class MainMenu extends Scene {\n  background: GameObjects.Image | null = null;\n  title: GameObjects.Text | null = null;\n  playButton!: GameObjects.Text;\n  settingsButton!: GameObjects.Text;\n  quitButton!: GameObjects.Text;\n\n  constructor() {\n    super(\"MainMenu\");\n  }\n\n  init(): void {\n    this.background = null;\n    this.title = null;\n  }\n\n  create() {\n    this.refreshLayout();\n\n    // --- Fade in on scene start ---\n    this.cameras.main.fadeIn(800, 0, 0, 0);\n\n    // --- Buttons below the title ---\n    this.playButton = this.createButton(this.scale.height * 0.68, \"▶ PLAY\");\n    this.settingsButton = this.createButton(this.scale.height * 0.78, \"⚙ SETTINGS\");\n    this.quitButton = this.createButton(this.scale.height * 0.88, \"✖ QUIT\");\n\n    // --- Button functionality ---\n    this.playButton.on(\"pointerup\", () => {\n      this.cameras.main.fadeOut(500, 0, 0, 0);\n      this.time.delayedCall(500, () => this.scene.start(\"Instructions\"));\n    });\n\n    this.settingsButton.on(\"pointerup\", () => {\n      this.settingsButton.setText(\"⚙ Coming Soon!\");\n      this.tweens.add({\n        targets: this.settingsButton,\n        alpha: 0.5,\n        yoyo: true,\n        duration: 200,\n      });\n    });\n\n    this.quitButton.on(\"pointerup\", () => {\n      this.quitButton.setText(\"✖ Not available in browser\");\n      this.tweens.add({\n        targets: this.quitButton,\n        alpha: 0.5,\n        yoyo: true,\n        duration: 300,\n      });\n    });\n\n    // --- Handle resize events dynamically ---\n    this.scale.on(\"resize\", () => this.refreshLayout());\n  }\n\n  private refreshLayout(): void {\n    const { width, height } = this.scale;\n    this.cameras.resize(width, height);\n\n    // --- Background ---\n    if (!this.background) {\n      this.background = this.add.image(0, 0, \"background\").setOrigin(0);\n    }\n    this.background.setDisplaySize(width, height);\n\n    // --- Title ---\n    const baseFontSize = 72;\n    if (!this.title) {\n      this.title = this.add\n        .text(width / 2, height * 0.45, \"T  W  I  N  E  R  T  I  A\", {\n          fontFamily: \"Arial Black\",\n          fontSize: `${baseFontSize}px`,\n          color: \"#00ffff\",\n          stroke: \"#000000\",\n          strokeThickness: 8,\n          shadow: { offsetX: 0, offsetY: 0, color: \"#00ffff\", blur: 20, fill: true },\n        })\n        .setOrigin(0.5);\n    }\n\n    // Animate the title for a fun pulse effect\n    this.tweens.add({\n      targets: this.title,\n      scale: { from: 1, to: 1.05 },\n      duration: 1000,\n      yoyo: true,\n      repeat: -1,\n      ease: \"Sine.easeInOut\",\n    });\n  }\n\n  private createButton(y: number, label: string): GameObjects.Text {\n    const btn = this.add\n      .text(this.scale.width / 2, y, label, {\n        fontFamily: \"Arial Black\",\n        fontSize: \"36px\",\n        color: \"#ffffff\",\n      })\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on(\"pointerover\", () =>\n        btn.setStyle({ color: \"#00e5ff\", stroke: \"#00ffff\", strokeThickness: 3 })\n      )\n      .on(\"pointerout\", () =>\n        btn.setStyle({ color: \"#ffffff\", stroke: \"#000000\", strokeThickness: 0 })\n      );\n\n    return btn;\n  }\n}\n","import * as Phaser from 'phaser';\r\n\r\nexport class Instructions extends Phaser.Scene {\r\n  private background!: Phaser.GameObjects.Rectangle;\r\n  private title!: Phaser.GameObjects.Text;\r\n  private instructions!: Phaser.GameObjects.Text;\r\n  private prompt!: Phaser.GameObjects.Text;\r\n  private startKey!: Phaser.Input.Keyboard.Key;\r\n\r\n  constructor() {\r\n    super('Instructions');\r\n  }\r\n\r\n  create() {\r\n    const { width, height } = this.scale; // ✅ full dynamic screen size\r\n\r\n    // Semi-transparent dark background\r\n    this.background = this.add.rectangle(width / 2, height / 2, width, height, 0x000000, 0.8);\r\n\r\n    // Title text\r\n    this.title = this.add.text(width / 2, height * 0.25, '🕹️ HOW TO PLAY 🕹️', {\r\n      fontSize: '48px',\r\n      color: '#00ffcc',\r\n      fontFamily: 'Arial Black',\r\n      align: 'center',\r\n    }).setOrigin(0.5);\r\n\r\n    // Instructions (more spaced and readable)\r\n    this.instructions = this.add.text(\r\n      width / 2,\r\n      height * 0.5,\r\n      `➡ Move: Arrow Keys\r\n🕶 Switch Worlds: [SPACE]\r\n💎 Collect Orbs to Win\r\n⚠ Avoid Obstacles\r\n💚 Reach the Green Portal`,\r\n      {\r\n        fontSize: '28px',\r\n        color: '#ffffff',\r\n        fontFamily: 'Arial',\r\n        align: 'center',\r\n        lineSpacing: 10,\r\n      }\r\n    ).setOrigin(0.5);\r\n\r\n    // Bottom prompt\r\n    this.prompt = this.add.text(\r\n      width / 2,\r\n      height * 0.8,\r\n      'Press [ENTER] to Start',\r\n      {\r\n        fontSize: '30px',\r\n        color: '#00ff00',\r\n        fontFamily: 'Arial',\r\n      }\r\n    ).setOrigin(0.5);\r\n\r\n    // ✅ Keyboard setup (safe check)\r\n    if (this.input.keyboard) {\r\n      this.startKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\r\n    }\r\n\r\n    // Fade-in animation for smoother entry\r\n    this.tweens.add({\r\n      targets: [this.background, this.title, this.instructions, this.prompt],\r\n      alpha: { from: 0, to: 1 },\r\n      duration: 1000,\r\n      ease: 'Sine.easeInOut',\r\n    });\r\n  }\r\n\r\n  // ✅ Phaser update with override\r\n  override update(): void {\r\n    if (this.startKey && Phaser.Input.Keyboard.JustDown(this.startKey)) {\r\n      // Fade out before switching\r\n      this.tweens.add({\r\n        targets: [this.background, this.title, this.instructions, this.prompt],\r\n        alpha: 0,\r\n        duration: 400,\r\n        onComplete: () => this.scene.start('Game'),\r\n      });\r\n    }\r\n  }\r\n}\r\n","export class Kiro {\r\n  private currentWorld: \"light\" | \"shadow\" = \"light\";\r\n\r\n  toggleWorld(): \"light\" | \"shadow\" {\r\n    this.currentWorld = this.currentWorld === \"light\" ? \"shadow\" : \"light\";\r\n    console.log(`[KIRO] Switched to ${this.currentWorld.toUpperCase()} WORLD`);\r\n    return this.currentWorld;\r\n  }\r\n\r\n  getCurrentWorld(): \"light\" | \"shadow\" {\r\n    return this.currentWorld;\r\n  }\r\n\r\n  log(world: \"light\" | \"shadow\", action: string, reflection: string) {\r\n    console.log(`[${world.toUpperCase()} WORLD] ${action} → ${reflection}`);\r\n  }\r\n}\r\n","// twinertia/src/client/game/scenes/Game.ts\nimport * as Phaser from \"phaser\";\nimport { Kiro } from \"../logic/Kiro\";\n\nexport class Game extends Phaser.Scene {\n  private kiro!: Kiro;\n  private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\n  private worldText!: Phaser.GameObjects.Text;\n\n  private lightGroup!: Phaser.Physics.Arcade.StaticGroup;\n  private shadowGroup!: Phaser.Physics.Arcade.StaticGroup;\n\n  private collectibles!: Phaser.Physics.Arcade.Group;\n  private collectedCount: number = 0;\n  private totalOrbs: number = 0;\n  private orbText!: Phaser.GameObjects.Text;\n  private goal!: Phaser.GameObjects.Rectangle;\n  private hazard!: Phaser.GameObjects.Rectangle;\n\n  private player!: Phaser.Physics.Arcade.Sprite;\n\n  // Start world = light\n  private currentWorld: \"light\" | \"shadow\" = \"light\";\n  private isTransitioning: boolean = false;\n\n  private isDead: boolean = false;\n\n  private lightEnergy: number = 100;\n  private shadowEnergy: number = 100;\n  private energyDecayRate: number = 5;\n  private energyText!: Phaser.GameObjects.Text;\n\n  // Shadow timer\n  private shadowTimer: number = 0;\n  private shadowLimit: number = 8; // seconds allowed in shadow\n  private shadowTimerText?: Phaser.GameObjects.Text;\n\n  // Lives\n  private lives: number = 3;\n  private lifeIcons: Phaser.GameObjects.Rectangle[] = [];\n\n  constructor() {\n    super(\"Game\");\n  }\n\n  create(): void {\n\n    const bg = this.add.image(0, 0, \"background\")\n  .setOrigin(0)\n  .setScrollFactor(0)\n  .setDepth(-10)\n  .setDisplaySize(this.cameras.main.width, this.cameras.main.height);\n\n    // reset state on create\n    this.isDead = false;\n    this.kiro = new Kiro();\n\n    // starting lives\n    this.lives = 3;\n    this.lifeIcons = [];\n\n    // --- Animations ---\n    this.anims.create({\n      key: \"boy-idle\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 0, end: 6 }),\n      frameRate: 0,\n      repeat: 0,\n    });\n    this.anims.create({\n      key: \"boy-run\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 14, end: 20 }),\n      frameRate: 0,\n      repeat: -1,\n    });\n    this.anims.create({\n      key: \"boy-jump\",\n      frames: this.anims.generateFrameNumbers(\"boy\", { start: 21, end: 27 }),\n      frameRate: 0,\n      repeat: 0,\n    });\n\n    // --- Player setup ---\n    this.player = this.physics.add.sprite(100, 450, \"boy\", 0);\n    this.player.setOrigin(0.5, 1);\n    this.player.play(\"boy-idle\");\n    this.player.setCollideWorldBounds(true);\n    this.player.setGravityY(500);\n    this.player.setBounce(0);\n    this.player.setSize(32, 60);\n    this.player.setOffset(13, 18);\n    this.player.setFriction(1, 1);\n\n\n    // --- Groups & Platforms ---\n    this.lightGroup = this.physics.add.staticGroup();\n    this.shadowGroup = this.physics.add.staticGroup();\n\n    // Requirement 9: first bar same for both worlds -> create at same position\n    this.createLightPlatform(100, 500, 200, 20); // first light platform\n    this.createShadowPlatform(100, 500, 200, 20); // first shadow platform (same)\n\n    // remaining platforms (keeps your previous layout but first bar is same)\n    this.createLightPlatform(400, 400, 150, 20);\n    this.createLightPlatform(650, 350, 200, 20);\n    this.createShadowPlatform(400, 500, 150, 20);\n    this.createShadowPlatform(600, 450, 150, 20);\n\n    // --- Hazard (shadow world) ---\n    this.hazard = this.add.rectangle(650, 330, 50, 20, 0xff0000);\n    this.physics.add.existing(this.hazard, true);\n\n    // --- Collectibles (shadow world) ---\n    this.collectibles = this.physics.add.group({ allowGravity: false, immovable: true });\n    const orbPositions = [\n      { x: 500, y: 470 },\n      { x: 600, y: 430 },\n      { x: 700, y: 400 },\n    ];\n    orbPositions.forEach((pos) => {\n      const orb = this.add.circle(pos.x, pos.y, 8, 0x00ffff);\n      this.physics.add.existing(orb);\n      const orbBody = orb.body as Phaser.Physics.Arcade.Body;\n      orbBody.setAllowGravity(false);\n      orbBody.setImmovable(true);\n      // initial state: invisible in light world (req #10)\n      orb.setVisible(false);\n      orbBody.enable = false;\n      (orb as any).collected = false;\n      // small pulse for shadow visibility (will be visible only in shadow)\n      this.tweens.add({\n        targets: orb,\n        scale: { from: 1, to: 1.3 },\n        alpha: { from: 0.8, to: 1 },\n        duration: 800,\n        yoyo: true,\n        repeat: -1,\n      });\n      this.collectibles.add(orb);\n    });\n\n    this.collectedCount = 0;\n    this.totalOrbs = orbPositions.length;\n\n    // --- Goal (light world) ---\nthis.goal = this.add.rectangle(800, 300, 40, 60, 0x888888);\nthis.physics.add.existing(this.goal, true);\nthis.lightGroup.add(this.goal);\n\n// make sure we detect collision with player\nthis.physics.add.overlap(this.player, this.goal, () => this.reachGoal(), undefined, this);\n\n// create a green overlay for the goal\nconst goalOverlay = this.add.rectangle(this.goal.x, this.goal.y, this.goal.width, this.goal.height, 0x00ff00, 0);\ngoalOverlay.setOrigin(this.goal.originX, this.goal.originY);\ngoalOverlay.setDepth(50);\ngoalOverlay.setVisible(false);\n(this.goal as any).overlay = goalOverlay;\n\n    // --- Collisions & Overlaps ---\n    this.physics.add.collider(this.player, this.lightGroup);\n    this.physics.add.collider(this.player, this.shadowGroup);\n    this.physics.add.overlap(\n      this.player,\n      this.collectibles,\n      (_player, orb) =>\n        this.collectItem(\n          _player as Phaser.GameObjects.GameObject,\n          orb as Phaser.GameObjects.GameObject & { body?: Phaser.Physics.Arcade.Body; collected?: boolean }\n        ),\n      undefined,\n      this\n    );\n    this.physics.add.overlap(this.player, this.goal, this.reachGoal, undefined, this);\n    this.physics.add.overlap(this.player, this.hazard, this.hitHazard, undefined, this);\n\n    // --- UI ---\n    this.cursors = this.input.keyboard!.createCursorKeys();\n    this.worldText = this.add\n      .text(10, 10, \"World: LIGHT\", {\n        fontFamily: \"monospace\",\n        fontSize: \"20px\",\n        color: \"#ffffff\",\n      })\n      .setScrollFactor(0);\n\n    this.energyText = this.add\n      .text(10, 40, \"Energy: Light 100 | Shadow 100\", {\n        fontFamily: \"monospace\",\n        fontSize: \"18px\",\n        color: \"#ffffaa\",\n      })\n      .setScrollFactor(0);\n\n    this.orbText = this.add\n      .text(10, 70, `Orbs: 0/${this.totalOrbs}`, {\n        fontFamily: \"monospace\",\n        fontSize: \"18px\",\n        color: \"#00ffff\",\n      })\n      .setScrollFactor(0);\n\n    // Lives UI (top-right)\n    this.createLifeUI();\n\n    // Timer text (hidden until entering shadow)\n    this.shadowTimerText = this.add\n      .text(10, 100, `Time: ${this.shadowLimit.toFixed(1)}s`, {\n        fontFamily: \"monospace\",\n        fontSize: \"16px\",\n        color: \"#ff66cc\",\n      })\n      .setScrollFactor(0);\n    this.shadowTimerText.setVisible(false);\n\n    const isLight = this.currentWorld === \"light\";\n    this.shadowGroup.children.each((obj) => {\n      const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n      go.setVisible(!isLight);\n      const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n      if (body) {\n        body.enable = !isLight;\n        if (!isLight) body.updateFromGameObject();\n      }\n      return true;\n    });\n\n    // collectibles already set invisible above\n\n    this.cameras.main.startFollow(this.player, true, 0.1, 0.1);\n    this.cameras.main.setBackgroundColor(\"#111122\");\n  }\n\n  override update(_time: number, _delta: number): void {\n    if (this.isDead) return;\n\n    const body = this.player.body as Phaser.Physics.Arcade.Body;\n    const speed = 200;\n    const jumpSpeed = -350;\n    body.setVelocityX(0);\n\n    if (this.cursors.left?.isDown) {\n      body.setVelocityX(-speed);\n      this.player.setFlipX(true);\n      if (body.blocked.down) this.player.play(\"boy-run\", true);\n    } else if (this.cursors.right?.isDown) {\n      body.setVelocityX(speed);\n      this.player.setFlipX(false);\n      if (body.blocked.down) this.player.play(\"boy-run\", true);\n    } else if (body.blocked.down) {\n      this.player.play(\"boy-idle\", true);\n    }\n\n    if (this.cursors.up?.isDown && body.blocked.down) {\n      body.setVelocityY(jumpSpeed);\n      this.player.play(\"boy-jump\", true);\n    }\n\n    if (this.player.y > 600) this.loseLife(); // falling off screen uses loseLife()\n\n    // Energy drain\n    if (this.currentWorld === \"light\")\n      this.lightEnergy = Math.max(0, this.lightEnergy - this.energyDecayRate * (_delta / 1000));\n    else this.shadowEnergy = Math.max(0, this.shadowEnergy - this.energyDecayRate * (_delta / 1000));\n\n    // Timer handling (req 1-4,11)\n    if (this.currentWorld === \"shadow\") {\n      // compute remaining\n      const elapsed = (this.time.now - this.shadowTimer) / 1000;\n      const remaining = Math.max(0, this.shadowLimit - elapsed);\n\n      // show timer text\n      if (this.shadowTimerText) {\n        this.shadowTimerText.setText(`Time: ${remaining.toFixed(1)}s`);\n        this.shadowTimerText.setVisible(true);\n      }\n\n      // warning flash when near end\n      if (remaining <= 2 && remaining > 0) {\n        this.cameras.main.flash(80, 255, 50, 50);\n      }\n\n      // when time runs out => instant death (req 11)\n      if (remaining <= 0) {\n        this.loseLife();\n        return; // skip further updates this frame\n      }\n    } else {\n      // hide timer text in light world (req 2)\n      if (this.shadowTimerText) this.shadowTimerText.setVisible(false);\n    }\n\n    // update energy text (keeps existing format)\n    this.energyText.setText(`Energy: Light ${this.lightEnergy.toFixed(0)} | Shadow ${this.shadowEnergy.toFixed(0)}`);\n\n    // die if energy below zero (existing)\n    if (this.lightEnergy <= 0 || this.shadowEnergy <= 0) {\n      this.loseLife();\n      return;\n    }\n\n    // --- World switch: SPACE toggles opposite world once (req 6) ---\n    if (Phaser.Input.Keyboard.JustDown(this.cursors.space!)) {\n      const newWorld = this.currentWorld === \"light\" ? \"shadow\" : \"light\";\n      this.fadeWorldTransition(newWorld);\n    }\n  }\n\n  private fadeWorldTransition(newWorld: \"light\" | \"shadow\") {\n    if (this.isTransitioning || newWorld === this.currentWorld) return;\n    this.isTransitioning = true;\n\n    const cam = this.cameras.main;\n    cam.fadeOut(150, 0, 0, 0);\n\n    cam.once(\"camerafadeoutcomplete\", () => {\n      const isLight: boolean = newWorld === \"light\"; // declare here\n\n      // Update UI & background\n      this.worldText.setText(`World: ${newWorld.toUpperCase()}`);\n      cam.setBackgroundColor(isLight ? \"#111122\" : \"#220011\");\n\n      // Light group\n      this.lightGroup.children.each((obj) => {\n        const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n        go.setVisible(isLight);\n        const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n        if (body) {\n          body.enable = isLight;\n          if (isLight) body.updateFromGameObject();\n        }\n        return true;\n      });\n\n      // Shadow group\n      this.shadowGroup.children.each((obj) => {\n        const go = obj as Phaser.GameObjects.Rectangle | Phaser.GameObjects.Sprite | Phaser.GameObjects.Arc;\n        go.setVisible(!isLight);\n        const body = (obj as any).body as Phaser.Physics.Arcade.Body | undefined;\n        if (body) {\n          body.enable = !isLight;\n          if (!isLight) body.updateFromGameObject();\n        }\n        return true;\n      });\n\n      // Collectibles\n      this.collectibles.children.each((obj) => {\n        const orb = obj as Phaser.GameObjects.Arc & { collected?: boolean; body?: Phaser.Physics.Arcade.Body };\n        const orbBody = orb.body;\n        const collected = !!orb.collected;\n        if (!isLight && !collected) {\n          orb.setVisible(true);\n          if (orbBody) orbBody.enable = true;\n        } else {\n          orb.setVisible(false);\n          if (orbBody) orbBody.enable = false;\n        }\n        return true;\n      });\n\n      // Timer: reset every shadow entry\n      if (newWorld === \"shadow\") {\n        this.shadowTimer = this.time.now;\n        if (this.shadowTimerText) {\n          this.shadowTimerText.setText(`Time: ${this.shadowLimit.toFixed(1)}s`);\n          this.shadowTimerText.setVisible(true);\n        }\n      } else {\n        if (this.shadowTimerText) this.shadowTimerText.setVisible(false);\n      }\n\n      cam.fadeIn(150, 0, 0, 0);\n      cam.once(\"camerafadeincomplete\", () => {\n        this.currentWorld = newWorld;\n        this.isTransitioning = false;\n      });\n    });\n  }\n\n  private createLightPlatform(x: number, y: number, w: number, h: number) {\n    const plat = this.add.rectangle(x, y, w, h, 0xffffff);\n    this.physics.add.existing(plat, true);\n    this.lightGroup.add(plat);\n  }\n\n  private createShadowPlatform(x: number, y: number, w: number, h: number) {\n    const plat = this.add.rectangle(x, y, w, h, 0xff5555, 0.5);\n    this.physics.add.existing(plat, true);\n    this.shadowGroup.add(plat);\n  }\n\n  // --- collectItem ---\n  private collectItem(\n    _playerObj: Phaser.GameObjects.GameObject,\n    orbObj: Phaser.GameObjects.GameObject & { body?: Phaser.Physics.Arcade.Body; collected?: boolean }\n  ): void {\n    if (this.currentWorld !== \"shadow\") return;\n\n    const orb = orbObj;\n    const orbBody = orb.body;\n\n    if (orb.collected) return;\n\n    orb.collected = true;\n    (orb as Phaser.GameObjects.Arc).setVisible(false);\n    if (orbBody) orbBody.enable = false;\n\n    this.collectedCount++;\n    this.orbText.setText(`Orbs: ${this.collectedCount}/${this.totalOrbs}`);\n    this.lightEnergy = Math.min(100, this.lightEnergy + 20);\n\n    const feedback = this.add.text(this.player.x - 30, this.player.y - 60, \"+Energy\", {\n      fontFamily: \"monospace\",\n      fontSize: \"16px\",\n      color: \"#00ffcc\",\n    });\n    this.tweens.add({\n      targets: feedback,\n      alpha: 0,\n      y: feedback.y - 20,\n      duration: 800,\n      onComplete: () => feedback.destroy(),\n    });\n\n    if (this.collectedCount >= this.totalOrbs) {\n      // mark goal ready: we won't immediately move the player, but visually prepare the overlay\n      this.goal.setFillStyle(0x00ff00);\n      const overlay = (this.goal as any).overlay as Phaser.GameObjects.Rectangle | undefined;\n      if (overlay) {\n      overlay.setVisible(true);\n      overlay.setAlpha(0);\n    }\n    }\n  }\n\n  private reachGoal() {\n  // Only trigger in the light world\n  if (this.currentWorld !== \"light\") return;\n\n  // Goal locked check\n  if (this.collectedCount < this.totalOrbs) {\n    const msg = this.add.text(this.player.x - 60, this.player.y - 80, \"Goal Locked!\", {\n      fontSize: \"18px\",\n      color: \"#ff3333\",\n      fontFamily: \"monospace\",\n    });\n    this.tweens.add({\n      targets: msg,\n      alpha: 0,\n      duration: 700,\n      delay: 800,\n      onComplete: () => msg.destroy(),\n    });\n    return;\n  }\n\n  // Prevent re-trigger\n  if (this.isDead) return;\n  this.isDead = true;\n\n  // Make sure goal is green and overlay ready\n  this.goal.setFillStyle(0x00ff00);\n  const overlay = (this.goal as any).overlay as Phaser.GameObjects.Rectangle | undefined;\n  if (overlay) {\n    overlay.setVisible(true);\n    overlay.setAlpha(0);\n    overlay.setDepth(50); // ensure overlay appears above everything\n  }\n\n  // Disable player physics and bring to front\n  this.physics.world.disable(this.player);\n  this.player.setDepth(25);\n\n  // Tween: player fades + overlay glows in together\n  const targetX = this.goal.x as number;\n  const targetY = (this.goal.y as number) - (this.goal.height ?? 40) / 4;\n\n  // Subtle goal glow pulse\n  this.tweens.add({\n  targets: overlay,\n  scale: { from: 1, to: 1.3 },\n  alpha: { from: 0.2, to: 1 },\n  duration: 400,\n  yoyo: true,\n  repeat: 0,\n});\n\n  // Fade overlay in (green exit fade)\n  if (overlay) {\n    this.tweens.add({\n      targets: overlay,\n      alpha: { from: 0, to: 1 },\n      duration: 400,\n      ease: \"Sine.easeInOut\",\n    });\n  }\n\n  // Tween player into goal (fade out & shrink)\n  this.tweens.add({\n    targets: this.player,\n    x: targetX,\n    y: targetY,\n    scale: 0.2,\n    alpha: 0,\n    duration: 400,\n    ease: \"Sine.easeInOut\",\n    onUpdate: () => {\n      const a = this.player.alpha;\n      const tintBlend = Phaser.Display.Color.Interpolate.ColorWithColor(\n        Phaser.Display.Color.ValueToColor(0xffffff),\n        Phaser.Display.Color.ValueToColor(0x00ff00),\n        100,\n        100 - a * 100\n      );\n      this.player.setTint(Phaser.Display.Color.GetColor(tintBlend.r, tintBlend.g, tintBlend.b));\n    },\n    onComplete: () => {\n      this.player.setVisible(false);\n      this.player.clearTint();\n\n      const completeText = this.add.text(\n        this.cameras.main.centerX,\n        this.cameras.main.centerY - 80,\n        \"LEVEL COMPLETE!\",\n        {\n          fontSize: \"34px\",\n          color: \"#00ff00\",\n          fontFamily: \"monospace\",\n        }\n      );\n      completeText.setOrigin(0.5);\n      completeText.setDepth(30);\n\n      this.time.delayedCall(1200, () => {\n        this.scene.pause();\n      });\n    },\n  });\n}\n\n  private hitHazard() {\n    // Immediate death when touching hazard in shadow world only\n    if (this.currentWorld === \"shadow\" && !this.isDead) {\n      this.loseLife();\n    }\n  }\n\n  /**\n   * loseLife - called for any death mechanism (hazard, fall, timer out, energy drain).\n   * Decrements life count, removes a life icon; if lives remain -> respawn player;\n   * if no lives remain -> full restart of scene (reset everything).\n   */\n  private loseLife() {\n    // prevent repeated calls\n    if (this.isDead) return;\n    this.isDead = true;\n\n    // decrement lives\n    this.lives = Math.max(0, this.lives - 1);\n\n    // vanish one life icon visually\n    const removedIcon = this.lifeIcons.pop();\n    if (removedIcon) {\n      this.tweens.add({\n        targets: removedIcon,\n        scaleX: 0,\n        scaleY: 0,\n        alpha: 0,\n        duration: 400,\n        ease: \"Power2\",\n        onComplete: () => removedIcon.destroy(),\n      });\n    }\n\n    // instant death visual: tint and stop animations\n    this.player.setTint(0xff0000);\n    this.player.setVelocity(0, 0);\n    this.player.anims.stop();\n\n\n\n    // fade out player & twin then decide next action\n    this.tweens.add({\n      targets: [this.player],\n      alpha: 0,\n      duration: 600,\n      ease: \"Power2\",\n      onComplete: () => {\n        if (this.lives <= 0) {\n          // all lives gone -> fully restart the scene (reset everything)\n          this.scene.restart();\n        } else {\n          // respawn player (do NOT restart scene)\n          this.respawnPlayer();\n        }\n      },\n    });\n  }\n\n  private respawnPlayer() {\n  // small delay then put player back at spawn\n  this.time.delayedCall(500, () => {\n    // re-enable player visibility and reset properties\n    this.player.clearTint();\n    this.player.setAlpha(1);\n    this.player.setVisible(true);\n\n    // make sure physics body is active again\n    this.physics.world.enable(this.player);\n\n    // position player on the first platform (not in the air)\n    this.player.setPosition(100, 440);\n    this.player.setVelocity(0, 0);\n\n    // reset world to light and ensure collisions are ready\n    this.currentWorld = \"light\";\n    this.isDead = false;\n\n    // make sure the player is standing properly\n    const body = this.player.body as Phaser.Physics.Arcade.Body;\n    body.updateFromGameObject();\n    body.checkCollision.none = false;\n\n    // refresh physics for all static bodies\n    this.physics.world.collide(this.player, this.lightGroup);\n\n    // fade player back in for clarity\n    this.tweens.add({\n      targets: [this.player],\n      alpha: 1,\n      duration: 300,\n      ease: \"Power2\",\n    });\n  });\n}\n\n  private createLifeUI() {\n    // create 3 small rectangles in the top-right\n    // using camera width to place them; setScrollFactor(0) so they stay in UI area\n    const startX = this.cameras.main.width - 20;\n    const y = 20;\n    const gap = 28;\n\n    // destroy any existing icons if present\n    this.lifeIcons.forEach((ic) => ic.destroy());\n    this.lifeIcons = [];\n\n    for (let i = 0; i < this.lives; i++) {\n      const x = startX - i * gap;\n      const rect = this.add.rectangle(x, y, 18, 18, 0xff0000).setOrigin(1, 0.5).setScrollFactor(0);\n      this.lifeIcons.unshift(rect); // unshift so pop removes last-life (leftmost)\n    }\n  }\n}\n","import { Scene } from 'phaser';\nimport * as Phaser from 'phaser';\n\nexport class GameOver extends Scene {\n  camera: Phaser.Cameras.Scene2D.Camera;\n  background: Phaser.GameObjects.Image;\n  gameover_text: Phaser.GameObjects.Text;\n\n  constructor() {\n    super('GameOver');\n  }\n\n  create() {\n    // Configure camera\n    this.camera = this.cameras.main;\n    this.camera.setBackgroundColor(0xff0000);\n\n    // Background – create once, full-screen\n    this.background = this.add.image(0, 0, 'background').setOrigin(0).setAlpha(0.5);\n\n    // \"Game Over\" text – created once and scaled responsively\n    this.gameover_text = this.add\n      .text(0, 0, 'Game Over', {\n        fontFamily: 'Arial Black',\n        fontSize: '64px',\n        color: '#ffffff',\n        stroke: '#000000',\n        strokeThickness: 8,\n        align: 'center',\n      })\n      .setOrigin(0.5);\n\n    // Initial responsive layout\n    this.updateLayout(this.scale.width, this.scale.height);\n\n    // Update layout on canvas resize / orientation change\n    this.scale.on('resize', (gameSize: Phaser.Structs.Size) => {\n      const { width, height } = gameSize;\n      this.updateLayout(width, height);\n    });\n\n    // Return to Main Menu on tap / click\n    this.input.once('pointerdown', () => {\n      this.scene.start('MainMenu');\n    });\n  }\n\n  private updateLayout(width: number, height: number): void {\n    // Resize camera viewport to prevent black bars\n    this.cameras.resize(width, height);\n\n    // Stretch background to fill entire screen\n    if (this.background) {\n      this.background.setDisplaySize(width, height);\n    }\n\n    // Compute scale factor (never enlarge above 1×)\n    const scaleFactor = Math.min(Math.min(width / 1024, height / 768), 1);\n\n    // Centre and scale the game-over text\n    if (this.gameover_text) {\n      this.gameover_text.setPosition(width / 2, height / 2);\n      this.gameover_text.setScale(scaleFactor);\n    }\n  }\n}\n","import * as Phaser from 'phaser';\nimport { Boot } from '../game/scenes/Boot';\nimport { Preloader } from '../game/scenes/Preloader';\nimport { MainMenu } from '../game/scenes/MainMenu';\nimport { Instructions } from '../game/scenes/instructions';\nimport { Game as MainGame } from '../game/scenes/Game';\nimport { GameOver } from '../game/scenes/GameOver';\n\n// ---------------------------------------------\n// Game Configuration\n// ---------------------------------------------\nconst config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  parent: 'game-container',\n  backgroundColor: '#028af8',\n\n  scale: {\n    mode: Phaser.Scale.RESIZE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: 1024,\n    height: 768,\n  },\n\n  physics: {\n    default: 'arcade',\n    arcade: {\n      debug: false, // set to true if you want to see physics boxes\n      gravity: { x: 0, y: 0 }, // ✅ include both x and y to satisfy Vector2Like\n    },\n  },\n\n  scene: [Boot, Preloader, MainMenu, Instructions, MainGame, GameOver],\n};\n\n// ---------------------------------------------\n// Boot Function\n// ---------------------------------------------\nconst StartGame = (parent: string) => {\n  return new Phaser.Game({ ...config, parent });\n};\n\nexport default StartGame;\n","import StartGame from './game/main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  StartGame('game-container');\n});\n"],"names":["Boot","Scene","Preloader","bar","progress","MainMenu","__publicField","width","height","baseFontSize","y","label","btn","Instructions","Phaser.Scene","Phaser.Input","Kiro","world","action","reflection","Game","orbPositions","pos","orb","orbBody","goalOverlay","_player","isLight","obj","body","_time","_delta","speed","jumpSpeed","_a","_b","_c","elapsed","remaining","newWorld","cam","collected","x","w","h","plat","_playerObj","orbObj","feedback","overlay","msg","targetX","targetY","a","tintBlend","Phaser.Display","completeText","removedIcon","startX","gap","ic","i","rect","GameOver","gameSize","scaleFactor","config","Phaser.AUTO","Phaser.Scale","MainGame","StartGame","parent","Phaser.Game"],"mappings":"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"}